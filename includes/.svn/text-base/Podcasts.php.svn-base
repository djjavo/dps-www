<?php
class Podcasts{
    /**
     * List all active podcasts
     * @param string $by Optional sort field, defaults to Podcast ID
     * @param string $order Optional sort order, defaults to DESCENDING
     * @return array[Podcast]
     */
    public static function all($by = "podcast_id", $order = "DESC"){
		$return = array();
        $sql = "SELECT * FROM web_podcast ORDER BY $by $order";
        $result = RawDB::query($sql);
        while ($object = pg_fetch_object($result,null,'Podcast'))
            $return[] = $object;
      
        return $return;
    }
    
    public static function get_editable(){
    	$return = array();
    	$sql = "SELECT * FROM web_podcast INNER JOIN web_podcast_members USING (podcast_id) WHERE username = '".Session::get_username()."'";
    	$result = RawDB::query($sql);
    	while($object = pg_fetch_object($result,null,'Podcast'))
    		$return[] = $object;
    	return $return;
    }

    public static function get_owned_by($username){
        $return = array();
        $sql = "SELECT * FROM web_podcast INNER JOIN web_podcast_members USING (podcast_id) WHERE username = '".$username."'";
        $result = RawDB::query($sql);
        while($object = pg_fetch_object($result,null,'Podcast'))
            $return[] = $object;
        return $return;
    }
    /**
     * Get a specific podcast
     * @param string $id The ID of the podcast to return 
     * @return Podcast The required podcast or null if not found
     */
    public static function get($id){
    	if(!is_numeric($id))	throw new UserError();
        $sql = "SELECT * FROM web_podcast WHERE podcast_id = '" .$id. "'";
        $result = RawDB::query($sql);
        if(pg_num_rows($result))
        	return pg_fetch_object($result,null,'Podcast');
        else
        	return null;
    }
}

?>
