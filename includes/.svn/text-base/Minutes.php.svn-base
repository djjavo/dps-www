<?php
class Minutes {
	protected $meeting_time;
	protected $meeting_id;
	public $minutesItems;

	function __construct($meeting_id){
		$this->meeting_id = $meeting_id;
		$this->retriveItems();
		$result = RawDB::query("SELECT meeting_time FROM web_meetings WHERE meeting_id = '".$this->meeting_id."'");
		$row = pg_fetch_row($result);
		$this->meeting_time = $row[0];
	}
	
	public function getMeetingTime(){
		return $this->meeting_time;
	}
	public function getMeetingID(){
		return $this->meeting_id;
	}
		
	private function retriveItems(){
		$this->minutesItems = NULL;
		$result = RawDB::query("SELECT * FROM web_minutes_items WHERE meeting_id = '".$this->meeting_id."' ORDER BY ordering ASC");
		while($object = pg_fetch_object($result, NULL,  'MinutesItem', array($this->meeting_id)))
			$this->minutesItems[] = $object;
	}
	public function addItem(){
		$this->minutesItems[] = new MinutesItem($this->meeting_id);
		end($this->minutesItems);
		return current($this->minutesItems);
	}
	public function removeItem($index){
		if(array_key_exists($this->minutesItems[$index])){
			if(!$this->minutesItems[$index]->delete()){
				trigger_error("Item could not be deleted", E_USER_ERROR);
				return false;
			}
			array_slice($this->minutesItems,$index,1);
			return true;
		} else {
			trigger_error("Item does not exist.", E_USER_ERROR);
			return false;
		}
	}
	
	public function save(){
		foreach ($this->minutesItems as $item){
			$item->save();
		}
	}
}