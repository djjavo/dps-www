<?php
class Show{
	protected $showid;
	protected $name;
	protected $description;
	protected $presenters;
	protected $language;
	protected $url;
	protected $date_start;
	protected $date_end;
	protected $active;
	protected $username;
	
	public function __construct(){
		$this->active		= ($this->active == 't');
	}

	public function get_showid(){
		return $this->showid;
	}
	public function get_name(){
		return $this->name;
	}
	public function get_owner(){
		return $this->username;
	}
	public function get_description(){
		return $this->description;
	}
	public function get_url(){
		if (is_null($this->url))
			return $this->showid;
		elseif ((!$this->active) || ($this->date_start > date("Y-m-d")) || ($this->date_end < date("Y-m-d")) )
			return $this->showid;
		else
			return $this->url;
	}
	public function get_languages(){
		$result = RawDB::query("SELECT languagecode,name FROM web_languages INNER JOIN web_show_languages USING (languagecode) WHERE showid = '".$this->get_showid()."'");
		if(pg_num_rows($result)>0){
			$array = array();
			while($language = pg_fetch_assoc($result))
				$array[] = $language;
			return $array;
		}else{
			return array();
		}

	}
	public function get_image(){
		if(file_exists(SITE_MEDIA_PATH . "shows/".$this->get_showid().".thumb.jpg"))
			return $this->get_showid().".thumb.jpg";
		else
			return "default.thumb.jpg";
	}
	public function get_large_image(){
		if(file_exists(SITE_MEDIA_PATH . "shows/".$this->get_showid().".large.jpg"))
			return $this->get_showid().".large.jpg";
		elseif(file_exists(SITE_MEDIA_PATH . "shows/".$this->get_showid().".jpg"))
			return $this->get_showid().".jpg";
		else
			return "default.large.jpg";
	}	
	public function get_presenters(){
		$result = RawDB::query("SELECT * FROM web_show_presenters INNER JOIN web_members USING (username) WHERE showid = '".$this->get_showid()."' ORDER BY username ASC");
		if(pg_num_rows($result)>0){
			$array = array();
			while($object = pg_fetch_object($result,null,"Presenter"))
				$array[] = $object;
			return $array;
		}else{
			return array();
		}
	}
	public function get_last_shows($number = 1){
		if(!is_numeric($number) && $number > 0) trigger_error("Number of shows must be a number");
		$result = RawDB::query("SELECT scheduleid,starttime,endtime FROM web_schedule WHERE showid = '".$this->get_showid()."' AND endtime <= '".time()."' ORDER BY starttime DESC LIMIT ".$number.";");
		if(pg_num_rows($result)>0){
			$array = array();
			while($object = pg_fetch_object($result,null,"ScheduledShow"))
				$array[] = $object;
			return $array;
		}else{
			return array();
		}
	}
	public function get_last_show(){
		$array = $this->get_last_shows(1);
		if($array)	return current($array); else return false;
	}
	public function get_next_shows($number = 1){
		if(!is_numeric($number) && $number > 0) trigger_error("Number of shows must be a number");
		$result = RawDB::query("SELECT * FROM web_schedule WHERE showid = '".$this->get_showid()."' AND starttime >= '".time()."' ORDER BY starttime ASC LIMIT ".$number.";");
		if(pg_num_rows($result)>0){
			$array = array();
			while($object = pg_fetch_object($result,null,"ScheduledShow"))
				$array[] = $object;
			return $array;
		}else{
			return array();
		}
	}
	public function get_next_show(){
		$array = $this->get_next_shows(1);
		if($array)	return current($array); else return false;
	}
	public function on_air_now(){
		$result = RawDB::query("SELECT * FROM web_schedule WHERE showid = '".$this->get_showid()."' AND starttime <= '".time()."' AND endtime >= '".time()."' ORDER BY starttime DESC LIMIT 1;");
		if(pg_num_rows($result)==1)
			return pg_fetch_object($result,null,"ScheduledShow");
		else
			return false;
	}
	public function get_podcasts() {
		$result = RawDB::query("SELECT * from web_shows_podcasts WHERE showid = '".$this->get_showid()."';");
		if(pg_num_rows($result)>0) {
			$return = array();
			$podcasts = pg_fetch_all($result);
			foreach ($podcasts as $podcast) {
				$return[] = Podcasts::get($podcast['podcastid']);
			}
			return $return;
		 } else {
			return false;
		}
	}
	public function set_name($name){
		$this->name = $name;
	}
	public function set_description($description){
		$this->description = $description;
	}
	public function set_thumb_image($filepath){
		imagejpeg(Images::resize_proportionaly_crop(Images::createfrom($filepath),75,75),$this->get_filepath_large());	
	}
	public function set_large_image($filepath){
		imagejpeg(Images::resize_proportionaly_to_width(Images::createfrom($filepath),360,200,600),$this->get_filepath_large());	
	}
	
	public function is_favourite() {
		if (Session::is_member()) {
			$result = RawDB::query("SELECT * from web_show_favourites WHERE showid = '".$this->get_showid()."' AND username = '".Session::get_username()."';");
			if (pg_num_rows($result) == 1){
				return TRUE;
			}else{
				return FALSE;
			}
		}else{
			return FALSE;
		}
	}
	public function favourite_add() {
		if (Session::is_member()) {
			RawDB::query("INSERT INTO web_show_favourites (username, showid) VALUES ('".Session::get_username()."', '".$this->get_showid()."')");
			echo "added";
		}
	}
	public function favourite_remove() {
		if (Session::is_member()) {
			RawDB::query("DELETE FROM web_show_favourites WHERE username = '".Session::get_username()."' AND showid = '".$this->get_showid()."'");
			echo "removed";
		}
	}
	public function favourite_toggle() {
		if (Session::is_member()) {
			if($this->is_favourite()) {
				$this->favourite_remove();
			} else {
				$this->favourite_add();
			}
		}
	}
	public function get_followers($sms=null, $email=null) {
		$sql = "SELECT * FROM web_members INNER JOIN web_show_favourites USING (username) WHERE web_show_favourites.showid = '".$this->get_showid()."'";
		if($sms === TRUE)
			$sql .= " AND alert_sms = 'TRUE'";
		if($email === TRUE)
			$sql .= " AND alert_email = 'TRUE'";
		$result = RawDB::query($sql);
		if(pg_num_rows($result)>0){
			$array = array();
			while($member = pg_fetch_object($result,null,'Member'))
				$array[] = $member;
			return $array;
		}else{
			return array();
		}
	}

	public function save(){
		if(is_null($this->showid)){
			trigger_error("Creation of shows is not supported here",E_USER_ERROR);
		}else{
			RawDB::query("UPDATE web_shows SET name = '".pg_escape_string($this->name)."', description = '".pg_escape_string($this->description)."' WHERE showid= '".$this->showid."'");
		}
	}
}