<?php
class Shows{
	public static function last_array($number = 1){
		if(!is_numeric($number) && $number > 0) trigger_error("Number of shows must be a number",E_USER_ERROR);
		$result = RawDB::query("SELECT * FROM web_schedule INNER JOIN web_shows USING (showid) WHERE endtime <= '".time()."' ORDER BY starttime DESC LIMIT ".$number.";");
		if(pg_num_rows($result)>0){
			$array = array();
			while($object = pg_fetch_object($result,null,"ScheduledShow"))
				$array[] = $object;
			return $array;
		}else{
			return array(self::get_jukebox(mktime(date("H") - 1),mktime(date("H"))));
		}
	}
	public static function last(){
		return current(self::last_array(1));
	}
	public static function next_array($number = 1){
		if(!is_numeric($number) && $number > 0) trigger_error("Number of shows must be a number",E_USER_ERROR);
		$result = RawDB::query("SELECT * FROM web_schedule INNER JOIN web_shows USING (showid) WHERE starttime >= '".time()."' ORDER BY starttime ASC LIMIT ".$number.";");
		if(pg_num_rows($result)>0){
			$array = array();
			while($object = pg_fetch_object($result,null,"ScheduledShow"))
				$array[] = $object;
			return $array;
		}else{
			return array(self::get_jukebox(mktime(date("H") + 1,0),mktime(date("H") + 2,0)));
		}
	}
	public static function next(){
		return current(self::next_array(1));
	}
	public static function current(){
		$result = RawDB::query("SELECT * FROM web_schedule INNER JOIN web_shows USING (showid) WHERE starttime <= '".time()."' and endtime >= '".time()."' ORDER BY starttime DESC LIMIT 1;");
		if(pg_num_rows($result))
			return pg_fetch_object($result,null,"ScheduledShow");
		else
			return self::get_jukebox(mktime(date("H"),0),mktime(date("H") + 1,0));
	}
	public static function get($showid){
		if(!is_numeric($showid)) trigger_error("Showid must be a number",E_USER_ERROR);
		$result = RawDB::query("SELECT * FROM web_shows WHERE showid = '".$showid."'");
		if(pg_num_rows($result))
			return pg_fetch_object($result,null,"Show");
		else
			return false;
	}
	public static function get_byname($showname, $active = TRUE){
		$query = strtolower(preg_replace('/[^a-zA-Z0-9]/', '', $showname));
		$sql = 'SELECT showid FROM web_shows WHERE url = \''. $query .'\'';
		if($active)
			$sql .= ' AND active AND now() BETWEEN date_start AND date_end';
		$result = RawDB::query($sql);
		if(pg_num_rows($result))
			return self::get(pg_fetch_result($result,0,0));
		else
			return false;
	}
	public static function get_scheduled($scheduleid){
		if(!is_numeric($scheduleid)) trigger_error("Scheduleid must be a number",E_USER_ERROR);
		$result = RawDB::query("SELECT * from web_schedule INNER JOIN web_shows on ( web_schedule.showid = web_shows.showid ) WHERE web_schedule.scheduleid = '".$scheduleid."'");
		if(pg_num_rows($result))
			return pg_fetch_object($result,null,"ScheduledShow");
		else
			return false;
	}
	public static function getScheduledBetween($start, $end) {
		$result = RawDB::query("SELECT * FROM web_schedule INNER JOIN web_shows USING (showid) WHERE starttime BETWEEN '".$start->format("U")."' and '".$end->format("U")."' ORDER BY starttime ASC;");
		if(pg_num_rows($result)>0){
			$array = array();
			while($object = pg_fetch_object($result,null,"ScheduledShow"))
				$array[] = $object;
			return $array;
		}else{
			return array(self::get_jukebox($start, $end));
		}
	}
	public static function getScheduledAt($time) {
		$result = RawDB::query("SELECT * FROM web_schedule INNER JOIN web_shows USING (showid) WHERE starttime < '".$time."' AND endtime > '".$time."';");
		if(pg_num_rows($result)>0){
			return pg_fetch_object($result,null,"ScheduledShow");
		}else{
			$time = date_create($time);
			return self::get_jukebox($time,$time);
		}
	}

	private static function get_jukebox($start,$end){
		return pg_fetch_object(RawDB::query("SELECT * FROM web_shows WHERE showid = 0"),null,"ScheduledShow",array(0,$start,$end));
		
	}
	public static function get_owned_by($username){
		$result = RawDB::query("SELECT * FROM web_shows WHERE username = '".$username."' AND now() BETWEEN web_shows.date_start AND web_shows.date_end");
		if(pg_num_rows($result)>0){
			$array = array();
			while($object = pg_fetch_object($result,null,"Show"))
				$array[] = $object;
			return $array;
		}else
			return array();
	}
	public static function get_presented_by($username){
		$result = RawDB::query("SELECT * FROM web_shows INNER JOIN web_show_presenters USING (showid) WHERE web_show_presenters.username='".$username."' AND now() BETWEEN web_shows.date_start AND web_shows.date_end");
		if(pg_num_rows($result)>0){
			$array = array();
			while($object = pg_fetch_object($result,null,"Show"))
				$array[] = $object;
			return $array;
		}else
			return array();
	}
	public static function get_touched_by($username){
		$result = RawDB::query("SELECT * FROM web_shows WHERE showid IN ((SELECT showid FROM web_shows WHERE username = '".$username."' AND now() BETWEEN web_shows.date_start AND web_shows.date_end) UNION (SELECT DISTINCT showid FROM web_shows INNER JOIN web_show_presenters USING (showid) WHERE web_show_presenters.username='".$username."' AND now() BETWEEN web_shows.date_start AND web_shows.date_end))");
                if(pg_num_rows($result)>0){
                        $array = array();
                        while($object = pg_fetch_object($result,null,"Show"))
                                $array[] = $object;
                        return $array;
                }else
                        return array();

	}
	public static function get_favourited_by($username){
		$result = RawDB::query("SELECT * FROM web_shows INNER JOIN web_show_favourites USING (showid) WHERE web_show_favourites.username='".$username."' AND now() BETWEEN web_shows.date_start AND web_shows.date_end");
		if(pg_num_rows($result)>0){
			$array = array();
			while($object = pg_fetch_object($result,null,"Show"))
				$array[] = $object;
			return $array;
		}else
			return array();
	}
}
?>
